永遠不要在header file使用name space 因為當include header file只是將文字黏貼上去．容易定義不清楚．

WIKI c++ Class
---------------
變數初始化

有時軟體工程師會想要他們的變數在聲明時有一個預設值。這可以通過聲明建構函式做到。

person(string N, int A) 
{
    name = N;
    age = A;
}
成員變數可以像下面的例子一樣，利用一個冒號，通過一個初始化序列初始化。這與上面不同，它進行了初始化（使用建構函式），而不是使用設定運算子。這對類別類別型來說更有效，因為它只需要直接構造；而賦值時，它們必須先使用預設建構函式進行第一次初始化，然後再賦予一個不同的值。而且一些類別型（例如參照和const類別型）不能被賦值，因而必須通過初始化序列進行初始化。

person(std::string N, int A) : name(N), age(A) {}
注意花括號不能被省略，即使為裡面為空。

預設值可以給予最後的幾個參數類別幫助初始化預設值。

person(std::string N = "", int A = 0) : name(N), age(A) {}

keyword
<<建構函式>>的聲明看起來像一個名字和資料類別型相同的函式。事實上，我們的確可以用函式呼叫的形式呼叫建構函式。在這種情況下一個person類別型的變數會成為返回值：

int main() 
{
    person r = person("Wales", 40);
    r.print();
}
以上的例子建立了一個臨時的person物件，然後使用複製建構函式將其賦予r。一個更好的建立物件的方式（沒有不需要的拷貝）：

int main() 
{
    person r ("Wales", 40);
    r.print ();
}